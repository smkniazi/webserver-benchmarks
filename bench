#!/bin/bash
set -e
#set -x

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

#LUA_SCRIPT=""
# LUA_SCRIPT="-s request1.lua"
LUA_SCRIPT="-s request10.lua"
URL="http://localhost:4046/dbopsimd/some_db/some_table"
# URL="http://localhost:4046/dbopjson/some_db/some_table"
# URL="http://localhost:4046/ping"
# URL="http://localhost:4046/ping/delay/000"
# URL="http://localhost:4046/ping/rand_delay/10"
#


server_mask=0x0FFFF
client_mask=0xF0000


GO_BIN=$DIR/go-gin/server
DROGON_BIN=$DIR/drogon/build/server
SERVER_BIN=$DROGON_BIN

BM_TYPE="drogon"
BM_TIME="10s"
BM_THREADS="10"
BM_CONNECTIONS="20"

help() {
cat <<EOF
   ./bench [-d duration] [-b benchmark_name] 
   -d duration. e.g. 10s 
   -b benchmark_name. e.g. drogon, go, ...
   -t num_threads. e.g. 10 
EOF
}

OPTIND=1 # Reset in case getopts has been used previously in the shell.
while getopts ":b:d:t:" opt; do
  case "$opt" in
  b)
    BM_TYPE=$OPTARG
    ;;
  d)
    BM_TIME=$OPTARG
    ;;
  t)
    BM_THREADS=$OPTARG
    ;;
  *)
    help
    exit 0
    ;;
  esac
done
shift $((OPTIND - 1))
[ "$1" = "--" ] && shift


if [ "$BM_TYPE" = "drogon" ]; then
  echo "Testing drogon"
  SERVER_BIN=$DROGON_BIN

elif [ "$BM_TYPE" = "go" ]; then
  echo "Testing go-gin"
  SERVER_BIN=$GO_BIN

else 
  echo "Wrong Benchmark"
  help
  exit 1
fi

BM_CONNECTIONS=$(echo "($BM_THREADS * 2)" | bc)

$SERVER_BIN &
server_pid=$!
taskset -p $server_mask $server_pid

sleep 1

set -x
wrk $LUA_SCRIPT -d $BM_TIME -c $BM_CONNECTIONS -t $BM_THREADS --latency $URL &
set +x

client_pid=$!
taskset -p $client_mask $server_pid

wait $client_pid

kill -9 $server_pid

exit 0

